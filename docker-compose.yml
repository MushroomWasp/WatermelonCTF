version: '3'

services:
  # Web server for the ShellRace CTF challenge
  web:
    image: php:8.0-apache
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html/
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html
      - FLAG=flag{sh3ll_r4c3_c0nd1t10n_pwn3d_2024}
    restart: always
    networks:
      - shellrace-network
    command: >
      bash -c "
        # Create required directories with proper permissions
        mkdir -p /var/www/html/uploads &&
        chmod 777 /var/www/html/uploads &&
        
        # Create and set permissions for comments.txt
        touch /var/www/html/comments.txt &&
        chmod 666 /var/www/html/comments.txt &&
        chown www-data:www-data /var/www/html/comments.txt &&
        
        # Set correct permissions for the web directory
        chown -R www-data:www-data /var/www/html &&
        
        # Server configuration
        echo 'ServerName localhost' >> /etc/apache2/apache2.conf &&
        
        # Create the flag
        echo $$FLAG > /flag_0xf8a2b3c4.txt &&
        chmod 644 /flag_0xf8a2b3c4.txt &&
        
        # Start Apache
        apache2-foreground
      "

  # Admin bot that visits the website
  admin-bot:
    build:
      context: ./admin-bot
      dockerfile: Dockerfile
    volumes:
      - ./admin-bot/logs:/usr/src/app/logs
    depends_on:
      - web
    environment:
      - NODE_ENV=production
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    networks:
      - shellrace-network
    restart: always
    # Override the config to point to the web service
    command: >
      bash -c "
        # Fix permissions for logs
        chmod -R 777 /usr/src/app/logs &&
        
        # Update config to point to the web service
        sed -i 's|baseUrl: \"http://localhost\"|baseUrl: \"http://web\"|g' src/config.js &&
        
        # Debug info
        echo 'Starting admin bot in container...' &&
        echo 'Node path: ' &&
        which node &&
        echo 'Node version: ' &&
        node -v &&
        
        # Start cron service
        service cron start &&
        
        # Run the bot once initially
        node src/index.js &&
        
        # Keep container running and show logs
        tail -f /var/log/cron.log
      "

networks:
  shellrace-network:
    driver: bridge

volumes:
  uploads:
    driver: local 